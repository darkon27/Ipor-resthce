//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RoyalSISWS.Models.SpringSalud_produccion
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class SpringSalud_produccionEntities : DbContext
    {
        public SpringSalud_produccionEntities()
            : base("name=SpringSalud_produccionEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<VW_SA_PR_REP_ListaServiciosAuxiliares> VW_SA_PR_REP_ListaServiciosAuxiliares { get; set; }
        public DbSet<VW_SS_HCE_VisorAnamnesis> VW_SS_HCE_VisorAnamnesis { get; set; }
        public DbSet<VW_SS_HCE_VisorDiagnostico> VW_SS_HCE_VisorDiagnostico { get; set; }
        public DbSet<VW_SS_HCE_VisorEmergencia> VW_SS_HCE_VisorEmergencia { get; set; }
        public DbSet<VW_SS_HCE_VisorExamen> VW_SS_HCE_VisorExamen { get; set; }
        public DbSet<VW_SS_HCE_VisorProcedimientoInforme> VW_SS_HCE_VisorProcedimientoInforme { get; set; }
        public DbSet<VW_SS_HCE_VisorHistoria> VW_SS_HCE_VisorHistoria { get; set; }
        public DbSet<VW_SS_HCE_VisorReceta> VW_SS_HCE_VisorReceta { get; set; }
        public DbSet<SS_IT_SaludAnamnesisIngreso> SS_IT_SaludAnamnesisIngreso { get; set; }
        public DbSet<SS_IT_SALUDASIGNARMEDICOINGRESO> SS_IT_SALUDASIGNARMEDICOINGRESO { get; set; }
        public DbSet<SS_IT_SaludATENDIDOConsultaExternaIngreso> SS_IT_SaludATENDIDOConsultaExternaIngreso { get; set; }
        public DbSet<SS_IT_SaludConsultaExternaIngreso> SS_IT_SaludConsultaExternaIngreso { get; set; }
        public DbSet<SS_IT_SaludDiagnosticoIngreso> SS_IT_SaludDiagnosticoIngreso { get; set; }
        public DbSet<SS_IT_SaludInformePROCIngreso> SS_IT_SaludInformePROCIngreso { get; set; }
        public DbSet<SS_IT_SaludInformeRutaIngreso> SS_IT_SaludInformeRutaIngreso { get; set; }
        public DbSet<SS_IT_SaludOFTALMOLOGICOIngreso> SS_IT_SaludOFTALMOLOGICOIngreso { get; set; }
        public DbSet<SS_IT_SaludProcedimientoIngreso> SS_IT_SaludProcedimientoIngreso { get; set; }
        public DbSet<SS_IT_SaludRecetaIndicacionesGENIngreso> SS_IT_SaludRecetaIndicacionesGENIngreso { get; set; }
        public DbSet<SS_IT_SaludRecetaIngreso> SS_IT_SaludRecetaIngreso { get; set; }
        public DbSet<VW_SS_HCE_VisorDescansoMedico> VW_SS_HCE_VisorDescansoMedico { get; set; }
        public DbSet<VW_SS_HCE_VisorProcedimiento> VW_SS_HCE_VisorProcedimiento { get; set; }
    
        public virtual ObjectResult<CW_AccesoUsuario_Result> CW_AccesoUsuario(Nullable<int> p_IDPERSONA, string p_USUARIO, string p_PASSWORD, string p_TDOCUMENTO, string p_ACCION)
        {
            var p_IDPERSONAParameter = p_IDPERSONA.HasValue ?
                new ObjectParameter("p_IDPERSONA", p_IDPERSONA) :
                new ObjectParameter("p_IDPERSONA", typeof(int));
    
            var p_USUARIOParameter = p_USUARIO != null ?
                new ObjectParameter("p_USUARIO", p_USUARIO) :
                new ObjectParameter("p_USUARIO", typeof(string));
    
            var p_PASSWORDParameter = p_PASSWORD != null ?
                new ObjectParameter("p_PASSWORD", p_PASSWORD) :
                new ObjectParameter("p_PASSWORD", typeof(string));
    
            var p_TDOCUMENTOParameter = p_TDOCUMENTO != null ?
                new ObjectParameter("p_TDOCUMENTO", p_TDOCUMENTO) :
                new ObjectParameter("p_TDOCUMENTO", typeof(string));
    
            var p_ACCIONParameter = p_ACCION != null ?
                new ObjectParameter("p_ACCION", p_ACCION) :
                new ObjectParameter("p_ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CW_AccesoUsuario_Result>("CW_AccesoUsuario", p_IDPERSONAParameter, p_USUARIOParameter, p_PASSWORDParameter, p_TDOCUMENTOParameter, p_ACCIONParameter);
        }
    
        public virtual ObjectResult<CW_HorarioMedico_Result> CW_HorarioMedico(Nullable<System.DateTime> ldt_Fecha, Nullable<int> ll_IdMedicoBusqueda, Nullable<int> ll_IdEspecialidadBusqueda, string ls_UnidadReplicacion)
        {
            var ldt_FechaParameter = ldt_Fecha.HasValue ?
                new ObjectParameter("ldt_Fecha", ldt_Fecha) :
                new ObjectParameter("ldt_Fecha", typeof(System.DateTime));
    
            var ll_IdMedicoBusquedaParameter = ll_IdMedicoBusqueda.HasValue ?
                new ObjectParameter("ll_IdMedicoBusqueda", ll_IdMedicoBusqueda) :
                new ObjectParameter("ll_IdMedicoBusqueda", typeof(int));
    
            var ll_IdEspecialidadBusquedaParameter = ll_IdEspecialidadBusqueda.HasValue ?
                new ObjectParameter("ll_IdEspecialidadBusqueda", ll_IdEspecialidadBusqueda) :
                new ObjectParameter("ll_IdEspecialidadBusqueda", typeof(int));
    
            var ls_UnidadReplicacionParameter = ls_UnidadReplicacion != null ?
                new ObjectParameter("ls_UnidadReplicacion", ls_UnidadReplicacion) :
                new ObjectParameter("ls_UnidadReplicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CW_HorarioMedico_Result>("CW_HorarioMedico", ldt_FechaParameter, ll_IdMedicoBusquedaParameter, ll_IdEspecialidadBusquedaParameter, ls_UnidadReplicacionParameter);
        }
    
        public virtual ObjectResult<A_SP_SS_HCE_ListaServiciosAuxiliares_Result> A_SP_SS_HCE_ListaServiciosAuxiliares(Nullable<int> idOrdenAtencion, Nullable<int> idEspecialidad)
        {
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<A_SP_SS_HCE_ListaServiciosAuxiliares_Result>("A_SP_SS_HCE_ListaServiciosAuxiliares", idOrdenAtencionParameter, idEspecialidadParameter);
        }
    
        public virtual ObjectResult<CW_BuscarMedicoEspecialidad_Result> CW_BuscarMedicoEspecialidad(Nullable<int> p_idEspecialidad, string p_UnidadReplicacion)
        {
            var p_idEspecialidadParameter = p_idEspecialidad.HasValue ?
                new ObjectParameter("p_idEspecialidad", p_idEspecialidad) :
                new ObjectParameter("p_idEspecialidad", typeof(int));
    
            var p_UnidadReplicacionParameter = p_UnidadReplicacion != null ?
                new ObjectParameter("p_UnidadReplicacion", p_UnidadReplicacion) :
                new ObjectParameter("p_UnidadReplicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CW_BuscarMedicoEspecialidad_Result>("CW_BuscarMedicoEspecialidad", p_idEspecialidadParameter, p_UnidadReplicacionParameter);
        }
    
        public virtual ObjectResult<CW_BuscarTraerMedico_Result> CW_BuscarTraerMedico(Nullable<int> idMedico, Nullable<int> idEspecialidad)
        {
            var idMedicoParameter = idMedico.HasValue ?
                new ObjectParameter("idMedico", idMedico) :
                new ObjectParameter("idMedico", typeof(int));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("idEspecialidad", idEspecialidad) :
                new ObjectParameter("idEspecialidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CW_BuscarTraerMedico_Result>("CW_BuscarTraerMedico", idMedicoParameter, idEspecialidadParameter);
        }
    
        public virtual ObjectResult<CW_CoberturaSeguro_Result> CW_CoberturaSeguro(string p_IDSEGURO)
        {
            var p_IDSEGUROParameter = p_IDSEGURO != null ?
                new ObjectParameter("p_IDSEGURO", p_IDSEGURO) :
                new ObjectParameter("p_IDSEGURO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CW_CoberturaSeguro_Result>("CW_CoberturaSeguro", p_IDSEGUROParameter);
        }
    
        public virtual int CW_DisponibilidadMedicaProxima(Nullable<System.DateTime> ldt_FechaBusquedaInicio, Nullable<System.DateTime> ldt_FechaBusquedaFinal, Nullable<int> ll_IdEspecialidadBusqueda, string ls_UnidadReplicacion, ObjectParameter ll_Idmedico)
        {
            var ldt_FechaBusquedaInicioParameter = ldt_FechaBusquedaInicio.HasValue ?
                new ObjectParameter("ldt_FechaBusquedaInicio", ldt_FechaBusquedaInicio) :
                new ObjectParameter("ldt_FechaBusquedaInicio", typeof(System.DateTime));
    
            var ldt_FechaBusquedaFinalParameter = ldt_FechaBusquedaFinal.HasValue ?
                new ObjectParameter("ldt_FechaBusquedaFinal", ldt_FechaBusquedaFinal) :
                new ObjectParameter("ldt_FechaBusquedaFinal", typeof(System.DateTime));
    
            var ll_IdEspecialidadBusquedaParameter = ll_IdEspecialidadBusqueda.HasValue ?
                new ObjectParameter("ll_IdEspecialidadBusqueda", ll_IdEspecialidadBusqueda) :
                new ObjectParameter("ll_IdEspecialidadBusqueda", typeof(int));
    
            var ls_UnidadReplicacionParameter = ls_UnidadReplicacion != null ?
                new ObjectParameter("ls_UnidadReplicacion", ls_UnidadReplicacion) :
                new ObjectParameter("ls_UnidadReplicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CW_DisponibilidadMedicaProxima", ldt_FechaBusquedaInicioParameter, ldt_FechaBusquedaFinalParameter, ll_IdEspecialidadBusquedaParameter, ls_UnidadReplicacionParameter, ll_Idmedico);
        }
    
        public virtual ObjectResult<CW_ListarEspecialidades_Result> CW_ListarEspecialidades(Nullable<int> p_idMedico)
        {
            var p_idMedicoParameter = p_idMedico.HasValue ?
                new ObjectParameter("p_idMedico", p_idMedico) :
                new ObjectParameter("p_idMedico", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CW_ListarEspecialidades_Result>("CW_ListarEspecialidades", p_idMedicoParameter);
        }
    
        public virtual ObjectResult<CW_ListarHistorial_Result> CW_ListarHistorial(Nullable<int> p_idTitular)
        {
            var p_idTitularParameter = p_idTitular.HasValue ?
                new ObjectParameter("p_idTitular", p_idTitular) :
                new ObjectParameter("p_idTitular", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CW_ListarHistorial_Result>("CW_ListarHistorial", p_idTitularParameter);
        }
    
        public virtual ObjectResult<CW_ListarMedicos_Result> CW_ListarMedicos(Nullable<int> p_idEspecialidad)
        {
            var p_idEspecialidadParameter = p_idEspecialidad.HasValue ?
                new ObjectParameter("p_idEspecialidad", p_idEspecialidad) :
                new ObjectParameter("p_idEspecialidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CW_ListarMedicos_Result>("CW_ListarMedicos", p_idEspecialidadParameter);
        }
    
        public virtual ObjectResult<CW_ListarPacientes_Result> CW_ListarPacientes(Nullable<int> p_IDPACIENTE)
        {
            var p_IDPACIENTEParameter = p_IDPACIENTE.HasValue ?
                new ObjectParameter("p_IDPACIENTE", p_IDPACIENTE) :
                new ObjectParameter("p_IDPACIENTE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CW_ListarPacientes_Result>("CW_ListarPacientes", p_IDPACIENTEParameter);
        }
    
        public virtual ObjectResult<CW_ListarUnidadReplicacion_Result> CW_ListarUnidadReplicacion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CW_ListarUnidadReplicacion_Result>("CW_ListarUnidadReplicacion");
        }
    
        public virtual ObjectResult<CW_ListarTipoDocumento_Result> CW_ListarTipoDocumento()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CW_ListarTipoDocumento_Result>("CW_ListarTipoDocumento");
        }
    
        public virtual ObjectResult<CW_ListarCitas_Result> CW_ListarCitas(Nullable<int> p_idTitular)
        {
            var p_idTitularParameter = p_idTitular.HasValue ?
                new ObjectParameter("p_idTitular", p_idTitular) :
                new ObjectParameter("p_idTitular", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CW_ListarCitas_Result>("CW_ListarCitas", p_idTitularParameter);
        }
    
        public virtual ObjectResult<A_SP_SS_HCE_VisorHistoria_Result> A_SP_SS_HCE_VisorHistoria(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, string documento, string codsucursal)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var codsucursalParameter = codsucursal != null ?
                new ObjectParameter("codsucursal", codsucursal) :
                new ObjectParameter("codsucursal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<A_SP_SS_HCE_VisorHistoria_Result>("A_SP_SS_HCE_VisorHistoria", fechaInicioParameter, fechaFinParameter, documentoParameter, codsucursalParameter);
        }
    
        public virtual int SP_HCE_InteroperabilidadSalidaV0002(string unidadReplicacion, Nullable<int> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HCE_InteroperabilidadSalidaV0002", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter);
        }
    
        public virtual int SP_HCE_ITIDConsultaExterna(string unidadReplicacion, Nullable<int> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HCE_ITIDConsultaExterna", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_HCE_ITListarValidacion(string unidadReplicacion, Nullable<int> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string usuarioCreacion, Nullable<int> idOrdenAtencion, Nullable<int> linea, string secuenciaHCE, Nullable<System.DateTime> fechaCreacion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var lineaParameter = linea.HasValue ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(int));
    
            var secuenciaHCEParameter = secuenciaHCE != null ?
                new ObjectParameter("SecuenciaHCE", secuenciaHCE) :
                new ObjectParameter("SecuenciaHCE", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_HCE_ITListarValidacion", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, usuarioCreacionParameter, idOrdenAtencionParameter, lineaParameter, secuenciaHCEParameter, fechaCreacionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_HCE_ITListarValidacionEmergencia(string unidadReplicacion, Nullable<int> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idConsultaExterna, Nullable<int> idOrdenAtencion, Nullable<int> linea, Nullable<int> lineaOrdenAtencion, Nullable<int> tipoOrdenMedica, string componente, Nullable<int> tipoInterConsulta, Nullable<int> medico, Nullable<int> especialidad, Nullable<int> estadoDocumento, Nullable<int> indicadorEPS, Nullable<int> estado, Nullable<int> medicoResponsable, string usuarioCreacion, string usuarioModificacion, string secuenciaHCE, Nullable<System.DateTime> fechaCreacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idConsultaExternaParameter = idConsultaExterna.HasValue ?
                new ObjectParameter("IdConsultaExterna", idConsultaExterna) :
                new ObjectParameter("IdConsultaExterna", typeof(int));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var lineaParameter = linea.HasValue ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(int));
    
            var lineaOrdenAtencionParameter = lineaOrdenAtencion.HasValue ?
                new ObjectParameter("LineaOrdenAtencion", lineaOrdenAtencion) :
                new ObjectParameter("LineaOrdenAtencion", typeof(int));
    
            var tipoOrdenMedicaParameter = tipoOrdenMedica.HasValue ?
                new ObjectParameter("TipoOrdenMedica", tipoOrdenMedica) :
                new ObjectParameter("TipoOrdenMedica", typeof(int));
    
            var componenteParameter = componente != null ?
                new ObjectParameter("Componente", componente) :
                new ObjectParameter("Componente", typeof(string));
    
            var tipoInterConsultaParameter = tipoInterConsulta.HasValue ?
                new ObjectParameter("TipoInterConsulta", tipoInterConsulta) :
                new ObjectParameter("TipoInterConsulta", typeof(int));
    
            var medicoParameter = medico.HasValue ?
                new ObjectParameter("Medico", medico) :
                new ObjectParameter("Medico", typeof(int));
    
            var especialidadParameter = especialidad.HasValue ?
                new ObjectParameter("Especialidad", especialidad) :
                new ObjectParameter("Especialidad", typeof(int));
    
            var estadoDocumentoParameter = estadoDocumento.HasValue ?
                new ObjectParameter("EstadoDocumento", estadoDocumento) :
                new ObjectParameter("EstadoDocumento", typeof(int));
    
            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var medicoResponsableParameter = medicoResponsable.HasValue ?
                new ObjectParameter("MedicoResponsable", medicoResponsable) :
                new ObjectParameter("MedicoResponsable", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var secuenciaHCEParameter = secuenciaHCE != null ?
                new ObjectParameter("SecuenciaHCE", secuenciaHCE) :
                new ObjectParameter("SecuenciaHCE", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_HCE_ITListarValidacionEmergencia", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idConsultaExternaParameter, idOrdenAtencionParameter, lineaParameter, lineaOrdenAtencionParameter, tipoOrdenMedicaParameter, componenteParameter, tipoInterConsultaParameter, medicoParameter, especialidadParameter, estadoDocumentoParameter, indicadorEPSParameter, estadoParameter, medicoResponsableParameter, usuarioCreacionParameter, usuarioModificacionParameter, secuenciaHCEParameter, fechaCreacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_ATENCIONES_SOA_Result> SS_HC_ATENCIONES_SOA(string tipoListado, string citaTipo, Nullable<System.DateTime> citaFecha, string origen, string nombreEspecialidad, string tipoPacienteNombre, string codigoOA, string cama, string tipoOrdenAtencionNombre, string codigoHC, string pacienteNombre, string medicoNombre, Nullable<int> idOrdenAtencion, Nullable<int> lineaOrdenAtencion, Nullable<int> idHospitalizacion, Nullable<int> idCita, Nullable<int> idPaciente, Nullable<int> tipoPaciente, Nullable<int> tipoAtencion, Nullable<int> idEspecialidad, Nullable<int> idMedico, Nullable<int> tipoOrdenAtencion, string componente, string compania, string sucursal, string estadoPersona, Nullable<int> estadoEpiClinico, string unidadReplicacion, string unidadReplicacionEC, Nullable<long> idEpisodioAtencion, Nullable<int> episodioClinico, Nullable<int> idEstablecimientoSalud, Nullable<int> idUnidadServicio, Nullable<int> idPersonalSalud, Nullable<long> episodioAtencion, Nullable<System.DateTime> fechaRegistro, Nullable<System.DateTime> fechaAtencion, Nullable<int> estadoEpiAtencion, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string version, string codigoHCAnterior, Nullable<int> indicadorCirugia, Nullable<int> indicadorExamenPrincipal, Nullable<int> indicadorSeguro, Nullable<int> modalidad, string sexo, string estadoCivil, string nivelInstruccion, string esPaciente, string esEmpresa, Nullable<int> inicio, Nullable<int> numeroFilas, string aCCION)
        {
            var tipoListadoParameter = tipoListado != null ?
                new ObjectParameter("tipoListado", tipoListado) :
                new ObjectParameter("tipoListado", typeof(string));
    
            var citaTipoParameter = citaTipo != null ?
                new ObjectParameter("CitaTipo", citaTipo) :
                new ObjectParameter("CitaTipo", typeof(string));
    
            var citaFechaParameter = citaFecha.HasValue ?
                new ObjectParameter("CitaFecha", citaFecha) :
                new ObjectParameter("CitaFecha", typeof(System.DateTime));
    
            var origenParameter = origen != null ?
                new ObjectParameter("Origen", origen) :
                new ObjectParameter("Origen", typeof(string));
    
            var nombreEspecialidadParameter = nombreEspecialidad != null ?
                new ObjectParameter("NombreEspecialidad", nombreEspecialidad) :
                new ObjectParameter("NombreEspecialidad", typeof(string));
    
            var tipoPacienteNombreParameter = tipoPacienteNombre != null ?
                new ObjectParameter("TipoPacienteNombre", tipoPacienteNombre) :
                new ObjectParameter("TipoPacienteNombre", typeof(string));
    
            var codigoOAParameter = codigoOA != null ?
                new ObjectParameter("CodigoOA", codigoOA) :
                new ObjectParameter("CodigoOA", typeof(string));
    
            var camaParameter = cama != null ?
                new ObjectParameter("Cama", cama) :
                new ObjectParameter("Cama", typeof(string));
    
            var tipoOrdenAtencionNombreParameter = tipoOrdenAtencionNombre != null ?
                new ObjectParameter("TipoOrdenAtencionNombre", tipoOrdenAtencionNombre) :
                new ObjectParameter("TipoOrdenAtencionNombre", typeof(string));
    
            var codigoHCParameter = codigoHC != null ?
                new ObjectParameter("CodigoHC", codigoHC) :
                new ObjectParameter("CodigoHC", typeof(string));
    
            var pacienteNombreParameter = pacienteNombre != null ?
                new ObjectParameter("PacienteNombre", pacienteNombre) :
                new ObjectParameter("PacienteNombre", typeof(string));
    
            var medicoNombreParameter = medicoNombre != null ?
                new ObjectParameter("MedicoNombre", medicoNombre) :
                new ObjectParameter("MedicoNombre", typeof(string));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var lineaOrdenAtencionParameter = lineaOrdenAtencion.HasValue ?
                new ObjectParameter("LineaOrdenAtencion", lineaOrdenAtencion) :
                new ObjectParameter("LineaOrdenAtencion", typeof(int));
    
            var idHospitalizacionParameter = idHospitalizacion.HasValue ?
                new ObjectParameter("IdHospitalizacion", idHospitalizacion) :
                new ObjectParameter("IdHospitalizacion", typeof(int));
    
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("IdCita", idCita) :
                new ObjectParameter("IdCita", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var tipoPacienteParameter = tipoPaciente.HasValue ?
                new ObjectParameter("TipoPaciente", tipoPaciente) :
                new ObjectParameter("TipoPaciente", typeof(int));
    
            var tipoAtencionParameter = tipoAtencion.HasValue ?
                new ObjectParameter("TipoAtencion", tipoAtencion) :
                new ObjectParameter("TipoAtencion", typeof(int));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var idMedicoParameter = idMedico.HasValue ?
                new ObjectParameter("IdMedico", idMedico) :
                new ObjectParameter("IdMedico", typeof(int));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            var componenteParameter = componente != null ?
                new ObjectParameter("Componente", componente) :
                new ObjectParameter("Componente", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var estadoPersonaParameter = estadoPersona != null ?
                new ObjectParameter("EstadoPersona", estadoPersona) :
                new ObjectParameter("EstadoPersona", typeof(string));
    
            var estadoEpiClinicoParameter = estadoEpiClinico.HasValue ?
                new ObjectParameter("EstadoEpiClinico", estadoEpiClinico) :
                new ObjectParameter("EstadoEpiClinico", typeof(int));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var unidadReplicacionECParameter = unidadReplicacionEC != null ?
                new ObjectParameter("UnidadReplicacionEC", unidadReplicacionEC) :
                new ObjectParameter("UnidadReplicacionEC", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEstablecimientoSaludParameter = idEstablecimientoSalud.HasValue ?
                new ObjectParameter("IdEstablecimientoSalud", idEstablecimientoSalud) :
                new ObjectParameter("IdEstablecimientoSalud", typeof(int));
    
            var idUnidadServicioParameter = idUnidadServicio.HasValue ?
                new ObjectParameter("IdUnidadServicio", idUnidadServicio) :
                new ObjectParameter("IdUnidadServicio", typeof(int));
    
            var idPersonalSaludParameter = idPersonalSalud.HasValue ?
                new ObjectParameter("IdPersonalSalud", idPersonalSalud) :
                new ObjectParameter("IdPersonalSalud", typeof(int));
    
            var episodioAtencionParameter = episodioAtencion.HasValue ?
                new ObjectParameter("EpisodioAtencion", episodioAtencion) :
                new ObjectParameter("EpisodioAtencion", typeof(long));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("FechaRegistro", fechaRegistro) :
                new ObjectParameter("FechaRegistro", typeof(System.DateTime));
    
            var fechaAtencionParameter = fechaAtencion.HasValue ?
                new ObjectParameter("FechaAtencion", fechaAtencion) :
                new ObjectParameter("FechaAtencion", typeof(System.DateTime));
    
            var estadoEpiAtencionParameter = estadoEpiAtencion.HasValue ?
                new ObjectParameter("EstadoEpiAtencion", estadoEpiAtencion) :
                new ObjectParameter("EstadoEpiAtencion", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var codigoHCAnteriorParameter = codigoHCAnterior != null ?
                new ObjectParameter("CodigoHCAnterior", codigoHCAnterior) :
                new ObjectParameter("CodigoHCAnterior", typeof(string));
    
            var indicadorCirugiaParameter = indicadorCirugia.HasValue ?
                new ObjectParameter("IndicadorCirugia", indicadorCirugia) :
                new ObjectParameter("IndicadorCirugia", typeof(int));
    
            var indicadorExamenPrincipalParameter = indicadorExamenPrincipal.HasValue ?
                new ObjectParameter("IndicadorExamenPrincipal", indicadorExamenPrincipal) :
                new ObjectParameter("IndicadorExamenPrincipal", typeof(int));
    
            var indicadorSeguroParameter = indicadorSeguro.HasValue ?
                new ObjectParameter("IndicadorSeguro", indicadorSeguro) :
                new ObjectParameter("IndicadorSeguro", typeof(int));
    
            var modalidadParameter = modalidad.HasValue ?
                new ObjectParameter("Modalidad", modalidad) :
                new ObjectParameter("Modalidad", typeof(int));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            var estadoCivilParameter = estadoCivil != null ?
                new ObjectParameter("EstadoCivil", estadoCivil) :
                new ObjectParameter("EstadoCivil", typeof(string));
    
            var nivelInstruccionParameter = nivelInstruccion != null ?
                new ObjectParameter("NivelInstruccion", nivelInstruccion) :
                new ObjectParameter("NivelInstruccion", typeof(string));
    
            var esPacienteParameter = esPaciente != null ?
                new ObjectParameter("EsPaciente", esPaciente) :
                new ObjectParameter("EsPaciente", typeof(string));
    
            var esEmpresaParameter = esEmpresa != null ?
                new ObjectParameter("EsEmpresa", esEmpresa) :
                new ObjectParameter("EsEmpresa", typeof(string));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("Inicio", inicio) :
                new ObjectParameter("Inicio", typeof(int));
    
            var numeroFilasParameter = numeroFilas.HasValue ?
                new ObjectParameter("NumeroFilas", numeroFilas) :
                new ObjectParameter("NumeroFilas", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_ATENCIONES_SOA_Result>("SS_HC_ATENCIONES_SOA", tipoListadoParameter, citaTipoParameter, citaFechaParameter, origenParameter, nombreEspecialidadParameter, tipoPacienteNombreParameter, codigoOAParameter, camaParameter, tipoOrdenAtencionNombreParameter, codigoHCParameter, pacienteNombreParameter, medicoNombreParameter, idOrdenAtencionParameter, lineaOrdenAtencionParameter, idHospitalizacionParameter, idCitaParameter, idPacienteParameter, tipoPacienteParameter, tipoAtencionParameter, idEspecialidadParameter, idMedicoParameter, tipoOrdenAtencionParameter, componenteParameter, companiaParameter, sucursalParameter, estadoPersonaParameter, estadoEpiClinicoParameter, unidadReplicacionParameter, unidadReplicacionECParameter, idEpisodioAtencionParameter, episodioClinicoParameter, idEstablecimientoSaludParameter, idUnidadServicioParameter, idPersonalSaludParameter, episodioAtencionParameter, fechaRegistroParameter, fechaAtencionParameter, estadoEpiAtencionParameter, fechaInicioParameter, fechaFinParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, versionParameter, codigoHCAnteriorParameter, indicadorCirugiaParameter, indicadorExamenPrincipalParameter, indicadorSeguroParameter, modalidadParameter, sexoParameter, estadoCivilParameter, nivelInstruccionParameter, esPacienteParameter, esEmpresaParameter, inicioParameter, numeroFilasParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_SS_IT_SALUDAnamnesisIngreso(Nullable<int> iDordenatencion, Nullable<int> idPaciente, Nullable<int> idLineaOa, Nullable<int> secuencia, string tiempoEnfermedad, string relatoCronologico, string presionArterialMS1, string presionArterialMS2, string frecuenciaCardiaca, string frecuenciaRespiratoria, Nullable<decimal> temperatura, string saturacionOxigeno, string peso, string talla, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string examenClinico, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion)
        {
            var iDordenatencionParameter = iDordenatencion.HasValue ?
                new ObjectParameter("IDordenatencion", iDordenatencion) :
                new ObjectParameter("IDordenatencion", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var idLineaOaParameter = idLineaOa.HasValue ?
                new ObjectParameter("IdLineaOa", idLineaOa) :
                new ObjectParameter("IdLineaOa", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var tiempoEnfermedadParameter = tiempoEnfermedad != null ?
                new ObjectParameter("TiempoEnfermedad", tiempoEnfermedad) :
                new ObjectParameter("TiempoEnfermedad", typeof(string));
    
            var relatoCronologicoParameter = relatoCronologico != null ?
                new ObjectParameter("RelatoCronologico", relatoCronologico) :
                new ObjectParameter("RelatoCronologico", typeof(string));
    
            var presionArterialMS1Parameter = presionArterialMS1 != null ?
                new ObjectParameter("PresionArterialMS1", presionArterialMS1) :
                new ObjectParameter("PresionArterialMS1", typeof(string));
    
            var presionArterialMS2Parameter = presionArterialMS2 != null ?
                new ObjectParameter("PresionArterialMS2", presionArterialMS2) :
                new ObjectParameter("PresionArterialMS2", typeof(string));
    
            var frecuenciaCardiacaParameter = frecuenciaCardiaca != null ?
                new ObjectParameter("FrecuenciaCardiaca", frecuenciaCardiaca) :
                new ObjectParameter("FrecuenciaCardiaca", typeof(string));
    
            var frecuenciaRespiratoriaParameter = frecuenciaRespiratoria != null ?
                new ObjectParameter("FrecuenciaRespiratoria", frecuenciaRespiratoria) :
                new ObjectParameter("FrecuenciaRespiratoria", typeof(string));
    
            var temperaturaParameter = temperatura.HasValue ?
                new ObjectParameter("Temperatura", temperatura) :
                new ObjectParameter("Temperatura", typeof(decimal));
    
            var saturacionOxigenoParameter = saturacionOxigeno != null ?
                new ObjectParameter("SaturacionOxigeno", saturacionOxigeno) :
                new ObjectParameter("SaturacionOxigeno", typeof(string));
    
            var pesoParameter = peso != null ?
                new ObjectParameter("Peso", peso) :
                new ObjectParameter("Peso", typeof(string));
    
            var tallaParameter = talla != null ?
                new ObjectParameter("Talla", talla) :
                new ObjectParameter("Talla", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var examenClinicoParameter = examenClinico != null ?
                new ObjectParameter("ExamenClinico", examenClinico) :
                new ObjectParameter("ExamenClinico", typeof(string));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SS_IT_SALUDAnamnesisIngreso", iDordenatencionParameter, idPacienteParameter, idLineaOaParameter, secuenciaParameter, tiempoEnfermedadParameter, relatoCronologicoParameter, presionArterialMS1Parameter, presionArterialMS2Parameter, frecuenciaCardiacaParameter, frecuenciaRespiratoriaParameter, temperaturaParameter, saturacionOxigenoParameter, pesoParameter, tallaParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, examenClinicoParameter, usuarioModificacionParameter, fechaModificacionParameter);
        }
    
        public virtual int SP_SS_IT_SALUDAtendidoConsultaExterna(Nullable<int> iDordenatencion, Nullable<int> iDPaciente, string usuario, Nullable<System.DateTime> fechaCreacion, string unidadReplicacion, Nullable<int> lineaOrdenAtencionConsulta, Nullable<int> tipoOrdenAtencion)
        {
            var iDordenatencionParameter = iDordenatencion.HasValue ?
                new ObjectParameter("IDordenatencion", iDordenatencion) :
                new ObjectParameter("IDordenatencion", typeof(int));
    
            var iDPacienteParameter = iDPaciente.HasValue ?
                new ObjectParameter("IDPaciente", iDPaciente) :
                new ObjectParameter("IDPaciente", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var lineaOrdenAtencionConsultaParameter = lineaOrdenAtencionConsulta.HasValue ?
                new ObjectParameter("LineaOrdenAtencionConsulta", lineaOrdenAtencionConsulta) :
                new ObjectParameter("LineaOrdenAtencionConsulta", typeof(int));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SS_IT_SALUDAtendidoConsultaExterna", iDordenatencionParameter, iDPacienteParameter, usuarioParameter, fechaCreacionParameter, unidadReplicacionParameter, lineaOrdenAtencionConsultaParameter, tipoOrdenAtencionParameter);
        }
    
        public virtual int SP_SS_IT_SALUDConsultaExterna(Nullable<int> iDordenatencion, Nullable<int> lineaOrdenAtencionConsulta, string unidadReplicacion, Nullable<int> iDPaciente, Nullable<int> secuencia, string usuario, Nullable<System.DateTime> fechacreacion, Nullable<int> tipoOrdenAtencion)
        {
            var iDordenatencionParameter = iDordenatencion.HasValue ?
                new ObjectParameter("IDordenatencion", iDordenatencion) :
                new ObjectParameter("IDordenatencion", typeof(int));
    
            var lineaOrdenAtencionConsultaParameter = lineaOrdenAtencionConsulta.HasValue ?
                new ObjectParameter("LineaOrdenAtencionConsulta", lineaOrdenAtencionConsulta) :
                new ObjectParameter("LineaOrdenAtencionConsulta", typeof(int));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var iDPacienteParameter = iDPaciente.HasValue ?
                new ObjectParameter("IDPaciente", iDPaciente) :
                new ObjectParameter("IDPaciente", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var fechacreacionParameter = fechacreacion.HasValue ?
                new ObjectParameter("Fechacreacion", fechacreacion) :
                new ObjectParameter("Fechacreacion", typeof(System.DateTime));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SS_IT_SALUDConsultaExterna", iDordenatencionParameter, lineaOrdenAtencionConsultaParameter, unidadReplicacionParameter, iDPacienteParameter, secuenciaParameter, usuarioParameter, fechacreacionParameter, tipoOrdenAtencionParameter);
        }
    
        public virtual int SP_SS_IT_SPRINGDiagnosticosConsultaExterna(Nullable<int> iDordenatencion, Nullable<int> idDiagnostico, string unidadReplicacion, Nullable<int> iDPaciente, string usuario, Nullable<System.DateTime> fechacreacion, string determinacion, Nullable<int> lINEA, Nullable<int> tipoordenatencion, string observaciondiagnostico, string tipoIT, ObjectParameter al_retorno, ObjectParameter as_mensaje)
        {
            var iDordenatencionParameter = iDordenatencion.HasValue ?
                new ObjectParameter("IDordenatencion", iDordenatencion) :
                new ObjectParameter("IDordenatencion", typeof(int));
    
            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var iDPacienteParameter = iDPaciente.HasValue ?
                new ObjectParameter("IDPaciente", iDPaciente) :
                new ObjectParameter("IDPaciente", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var fechacreacionParameter = fechacreacion.HasValue ?
                new ObjectParameter("Fechacreacion", fechacreacion) :
                new ObjectParameter("Fechacreacion", typeof(System.DateTime));
    
            var determinacionParameter = determinacion != null ?
                new ObjectParameter("Determinacion", determinacion) :
                new ObjectParameter("Determinacion", typeof(string));
    
            var lINEAParameter = lINEA.HasValue ?
                new ObjectParameter("LINEA", lINEA) :
                new ObjectParameter("LINEA", typeof(int));
    
            var tipoordenatencionParameter = tipoordenatencion.HasValue ?
                new ObjectParameter("tipoordenatencion", tipoordenatencion) :
                new ObjectParameter("tipoordenatencion", typeof(int));
    
            var observaciondiagnosticoParameter = observaciondiagnostico != null ?
                new ObjectParameter("observaciondiagnostico", observaciondiagnostico) :
                new ObjectParameter("observaciondiagnostico", typeof(string));
    
            var tipoITParameter = tipoIT != null ?
                new ObjectParameter("tipoIT", tipoIT) :
                new ObjectParameter("tipoIT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SS_IT_SPRINGDiagnosticosConsultaExterna", iDordenatencionParameter, idDiagnosticoParameter, unidadReplicacionParameter, iDPacienteParameter, usuarioParameter, fechacreacionParameter, determinacionParameter, lINEAParameter, tipoordenatencionParameter, observaciondiagnosticoParameter, tipoITParameter, al_retorno, as_mensaje);
        }
    
        public virtual int SP_SS_IT_SPRINGRUTAHCE(Nullable<int> iDordenatencion, string unidadReplicacion, Nullable<int> iDPaciente, string usuario, Nullable<System.DateTime> fechacreacion, Nullable<int> lINEA, string iNFORMERUTA, string oBSERVACION)
        {
            var iDordenatencionParameter = iDordenatencion.HasValue ?
                new ObjectParameter("IDordenatencion", iDordenatencion) :
                new ObjectParameter("IDordenatencion", typeof(int));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var iDPacienteParameter = iDPaciente.HasValue ?
                new ObjectParameter("IDPaciente", iDPaciente) :
                new ObjectParameter("IDPaciente", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var fechacreacionParameter = fechacreacion.HasValue ?
                new ObjectParameter("Fechacreacion", fechacreacion) :
                new ObjectParameter("Fechacreacion", typeof(System.DateTime));
    
            var lINEAParameter = lINEA.HasValue ?
                new ObjectParameter("LINEA", lINEA) :
                new ObjectParameter("LINEA", typeof(int));
    
            var iNFORMERUTAParameter = iNFORMERUTA != null ?
                new ObjectParameter("INFORMERUTA", iNFORMERUTA) :
                new ObjectParameter("INFORMERUTA", typeof(string));
    
            var oBSERVACIONParameter = oBSERVACION != null ?
                new ObjectParameter("OBSERVACION", oBSERVACION) :
                new ObjectParameter("OBSERVACION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SS_IT_SPRINGRUTAHCE", iDordenatencionParameter, unidadReplicacionParameter, iDPacienteParameter, usuarioParameter, fechacreacionParameter, lINEAParameter, iNFORMERUTAParameter, oBSERVACIONParameter);
        }
    
        public virtual int SP_SS_IT_SPRINGExamenesConsultaExterna(Nullable<int> iDordenatencion, Nullable<int> iDPaciente, Nullable<int> idTipoOrdenatencion, string componente, Nullable<decimal> cantidad, Nullable<int> indicadorEPS, Nullable<int> especialidad, string usuario, Nullable<System.DateTime> fechacreacion, Nullable<int> lineamax, string observacion, Nullable<int> lineaOrdenAtencionConsulta, string sECUENCIALHCE)
        {
            var iDordenatencionParameter = iDordenatencion.HasValue ?
                new ObjectParameter("IDordenatencion", iDordenatencion) :
                new ObjectParameter("IDordenatencion", typeof(int));
    
            var iDPacienteParameter = iDPaciente.HasValue ?
                new ObjectParameter("IDPaciente", iDPaciente) :
                new ObjectParameter("IDPaciente", typeof(int));
    
            var idTipoOrdenatencionParameter = idTipoOrdenatencion.HasValue ?
                new ObjectParameter("IdTipoOrdenatencion", idTipoOrdenatencion) :
                new ObjectParameter("IdTipoOrdenatencion", typeof(int));
    
            var componenteParameter = componente != null ?
                new ObjectParameter("Componente", componente) :
                new ObjectParameter("Componente", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));
    
            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));
    
            var especialidadParameter = especialidad.HasValue ?
                new ObjectParameter("Especialidad", especialidad) :
                new ObjectParameter("Especialidad", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var fechacreacionParameter = fechacreacion.HasValue ?
                new ObjectParameter("Fechacreacion", fechacreacion) :
                new ObjectParameter("Fechacreacion", typeof(System.DateTime));
    
            var lineamaxParameter = lineamax.HasValue ?
                new ObjectParameter("lineamax", lineamax) :
                new ObjectParameter("lineamax", typeof(int));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var lineaOrdenAtencionConsultaParameter = lineaOrdenAtencionConsulta.HasValue ?
                new ObjectParameter("LineaOrdenAtencionConsulta", lineaOrdenAtencionConsulta) :
                new ObjectParameter("LineaOrdenAtencionConsulta", typeof(int));
    
            var sECUENCIALHCEParameter = sECUENCIALHCE != null ?
                new ObjectParameter("SECUENCIALHCE", sECUENCIALHCE) :
                new ObjectParameter("SECUENCIALHCE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SS_IT_SPRINGExamenesConsultaExterna", iDordenatencionParameter, iDPacienteParameter, idTipoOrdenatencionParameter, componenteParameter, cantidadParameter, indicadorEPSParameter, especialidadParameter, usuarioParameter, fechacreacionParameter, lineamaxParameter, observacionParameter, lineaOrdenAtencionConsultaParameter, sECUENCIALHCEParameter);
        }
    
        public virtual ObjectResult<SP_SS_EliminarLlamado_Result> SP_SS_EliminarLlamado(Nullable<int> idCita, string usuario, string observacion, Nullable<int> valor)
        {
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("IdCita", idCita) :
                new ObjectParameter("IdCita", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("Valor", valor) :
                new ObjectParameter("Valor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SS_EliminarLlamado_Result>("SP_SS_EliminarLlamado", idCitaParameter, usuarioParameter, observacionParameter, valorParameter);
        }
    
        public virtual ObjectResult<SP_SS_GenerarLlamado_Result> SP_SS_GenerarLlamado(Nullable<int> idCita, string usuario, string observacion)
        {
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("IdCita", idCita) :
                new ObjectParameter("IdCita", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SS_GenerarLlamado_Result>("SP_SS_GenerarLlamado", idCitaParameter, usuarioParameter, observacionParameter);
        }
    
        public virtual ObjectResult<SP_SS_IT_SaludRecetaIngreso_Result> SP_SS_IT_SaludRecetaIngreso(string unidadReplicacion, Nullable<int> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idOrdenAtencion, Nullable<int> lineaOrdenAtencion, Nullable<int> secuencia, string componente, string subFamilia, string familia, string linea, Nullable<int> unidadMedida, Nullable<decimal> cantidad, string via, string dosis, string diastratamiento, string frecuencia, Nullable<int> indicadorEPS, Nullable<int> tipoReceta, string indicacionEspecifica, Nullable<int> tipoOrdenAtencion, string sECUENCIALHCE, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechacreacion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var lineaOrdenAtencionParameter = lineaOrdenAtencion.HasValue ?
                new ObjectParameter("LineaOrdenAtencion", lineaOrdenAtencion) :
                new ObjectParameter("LineaOrdenAtencion", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var componenteParameter = componente != null ?
                new ObjectParameter("Componente", componente) :
                new ObjectParameter("Componente", typeof(string));
    
            var subFamiliaParameter = subFamilia != null ?
                new ObjectParameter("SubFamilia", subFamilia) :
                new ObjectParameter("SubFamilia", typeof(string));
    
            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));
    
            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));
    
            var unidadMedidaParameter = unidadMedida.HasValue ?
                new ObjectParameter("UnidadMedida", unidadMedida) :
                new ObjectParameter("UnidadMedida", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));
    
            var viaParameter = via != null ?
                new ObjectParameter("Via", via) :
                new ObjectParameter("Via", typeof(string));
    
            var dosisParameter = dosis != null ?
                new ObjectParameter("Dosis", dosis) :
                new ObjectParameter("Dosis", typeof(string));
    
            var diastratamientoParameter = diastratamiento != null ?
                new ObjectParameter("Diastratamiento", diastratamiento) :
                new ObjectParameter("Diastratamiento", typeof(string));
    
            var frecuenciaParameter = frecuencia != null ?
                new ObjectParameter("Frecuencia", frecuencia) :
                new ObjectParameter("Frecuencia", typeof(string));
    
            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));
    
            var tipoRecetaParameter = tipoReceta.HasValue ?
                new ObjectParameter("TipoReceta", tipoReceta) :
                new ObjectParameter("TipoReceta", typeof(int));
    
            var indicacionEspecificaParameter = indicacionEspecifica != null ?
                new ObjectParameter("IndicacionEspecifica", indicacionEspecifica) :
                new ObjectParameter("IndicacionEspecifica", typeof(string));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            var sECUENCIALHCEParameter = sECUENCIALHCE != null ?
                new ObjectParameter("SECUENCIALHCE", sECUENCIALHCE) :
                new ObjectParameter("SECUENCIALHCE", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechacreacionParameter = fechacreacion.HasValue ?
                new ObjectParameter("Fechacreacion", fechacreacion) :
                new ObjectParameter("Fechacreacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SS_IT_SaludRecetaIngreso_Result>("SP_SS_IT_SaludRecetaIngreso", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idOrdenAtencionParameter, lineaOrdenAtencionParameter, secuenciaParameter, componenteParameter, subFamiliaParameter, familiaParameter, lineaParameter, unidadMedidaParameter, cantidadParameter, viaParameter, dosisParameter, diastratamientoParameter, frecuenciaParameter, indicadorEPSParameter, tipoRecetaParameter, indicacionEspecificaParameter, tipoOrdenAtencionParameter, sECUENCIALHCEParameter, estadoParameter, usuarioCreacionParameter, fechacreacionParameter);
        }
    
        public virtual ObjectResult<SP_SS_IT_SaludDiagnosticoIngreso_Result> SP_SS_IT_SaludDiagnosticoIngreso(string unidadReplicacion, Nullable<int> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idOrdenAtencion, Nullable<int> lINEA, Nullable<int> idDiagnostico, Nullable<int> secuencia, string determinacion, Nullable<int> tIPOORDENATENCION, string observacionDIAGNOSTICO, string tIPOIT, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechacreacion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var lINEAParameter = lINEA.HasValue ?
                new ObjectParameter("LINEA", lINEA) :
                new ObjectParameter("LINEA", typeof(int));
    
            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var determinacionParameter = determinacion != null ?
                new ObjectParameter("Determinacion", determinacion) :
                new ObjectParameter("Determinacion", typeof(string));
    
            var tIPOORDENATENCIONParameter = tIPOORDENATENCION.HasValue ?
                new ObjectParameter("TIPOORDENATENCION", tIPOORDENATENCION) :
                new ObjectParameter("TIPOORDENATENCION", typeof(int));
    
            var observacionDIAGNOSTICOParameter = observacionDIAGNOSTICO != null ?
                new ObjectParameter("ObservacionDIAGNOSTICO", observacionDIAGNOSTICO) :
                new ObjectParameter("ObservacionDIAGNOSTICO", typeof(string));
    
            var tIPOITParameter = tIPOIT != null ?
                new ObjectParameter("TIPOIT", tIPOIT) :
                new ObjectParameter("TIPOIT", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechacreacionParameter = fechacreacion.HasValue ?
                new ObjectParameter("Fechacreacion", fechacreacion) :
                new ObjectParameter("Fechacreacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SS_IT_SaludDiagnosticoIngreso_Result>("SP_SS_IT_SaludDiagnosticoIngreso", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idOrdenAtencionParameter, lINEAParameter, idDiagnosticoParameter, secuenciaParameter, determinacionParameter, tIPOORDENATENCIONParameter, observacionDIAGNOSTICOParameter, tIPOITParameter, estadoParameter, usuarioCreacionParameter, fechacreacionParameter);
        }
    
        public virtual ObjectResult<SP_SS_IT_SALUDAnamnesisIngresoMirth_Result> SP_SS_IT_SALUDAnamnesisIngresoMirth(string unidadReplicacion, Nullable<int> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idOrdenAtencion, Nullable<int> lineaOrdenAtencion, string secuencia, string tiempoEnfermedad, string tiempoEnfermedadUnidad, string relatoCronologico, string presionArterialMSD1, Nullable<int> presionArterialMSD2, string presionArterialMSI1, string presionArterialMSI2, string frecuenciaCardiaca, Nullable<int> frecuenciaRespiratoria, string temperatura, Nullable<int> saturacionOxigeno, string peso, string talla, string examenClinico, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechacreacion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var lineaOrdenAtencionParameter = lineaOrdenAtencion.HasValue ?
                new ObjectParameter("LineaOrdenAtencion", lineaOrdenAtencion) :
                new ObjectParameter("LineaOrdenAtencion", typeof(int));
    
            var secuenciaParameter = secuencia != null ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(string));
    
            var tiempoEnfermedadParameter = tiempoEnfermedad != null ?
                new ObjectParameter("TiempoEnfermedad", tiempoEnfermedad) :
                new ObjectParameter("TiempoEnfermedad", typeof(string));
    
            var tiempoEnfermedadUnidadParameter = tiempoEnfermedadUnidad != null ?
                new ObjectParameter("TiempoEnfermedadUnidad", tiempoEnfermedadUnidad) :
                new ObjectParameter("TiempoEnfermedadUnidad", typeof(string));
    
            var relatoCronologicoParameter = relatoCronologico != null ?
                new ObjectParameter("RelatoCronologico", relatoCronologico) :
                new ObjectParameter("RelatoCronologico", typeof(string));
    
            var presionArterialMSD1Parameter = presionArterialMSD1 != null ?
                new ObjectParameter("PresionArterialMSD1", presionArterialMSD1) :
                new ObjectParameter("PresionArterialMSD1", typeof(string));
    
            var presionArterialMSD2Parameter = presionArterialMSD2.HasValue ?
                new ObjectParameter("PresionArterialMSD2", presionArterialMSD2) :
                new ObjectParameter("PresionArterialMSD2", typeof(int));
    
            var presionArterialMSI1Parameter = presionArterialMSI1 != null ?
                new ObjectParameter("PresionArterialMSI1", presionArterialMSI1) :
                new ObjectParameter("PresionArterialMSI1", typeof(string));
    
            var presionArterialMSI2Parameter = presionArterialMSI2 != null ?
                new ObjectParameter("PresionArterialMSI2", presionArterialMSI2) :
                new ObjectParameter("PresionArterialMSI2", typeof(string));
    
            var frecuenciaCardiacaParameter = frecuenciaCardiaca != null ?
                new ObjectParameter("FrecuenciaCardiaca", frecuenciaCardiaca) :
                new ObjectParameter("FrecuenciaCardiaca", typeof(string));
    
            var frecuenciaRespiratoriaParameter = frecuenciaRespiratoria.HasValue ?
                new ObjectParameter("FrecuenciaRespiratoria", frecuenciaRespiratoria) :
                new ObjectParameter("FrecuenciaRespiratoria", typeof(int));
    
            var temperaturaParameter = temperatura != null ?
                new ObjectParameter("Temperatura", temperatura) :
                new ObjectParameter("Temperatura", typeof(string));
    
            var saturacionOxigenoParameter = saturacionOxigeno.HasValue ?
                new ObjectParameter("SaturacionOxigeno", saturacionOxigeno) :
                new ObjectParameter("SaturacionOxigeno", typeof(int));
    
            var pesoParameter = peso != null ?
                new ObjectParameter("Peso", peso) :
                new ObjectParameter("Peso", typeof(string));
    
            var tallaParameter = talla != null ?
                new ObjectParameter("Talla", talla) :
                new ObjectParameter("Talla", typeof(string));
    
            var examenClinicoParameter = examenClinico != null ?
                new ObjectParameter("ExamenClinico", examenClinico) :
                new ObjectParameter("ExamenClinico", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechacreacionParameter = fechacreacion.HasValue ?
                new ObjectParameter("Fechacreacion", fechacreacion) :
                new ObjectParameter("Fechacreacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SS_IT_SALUDAnamnesisIngresoMirth_Result>("SP_SS_IT_SALUDAnamnesisIngresoMirth", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idOrdenAtencionParameter, lineaOrdenAtencionParameter, secuenciaParameter, tiempoEnfermedadParameter, tiempoEnfermedadUnidadParameter, relatoCronologicoParameter, presionArterialMSD1Parameter, presionArterialMSD2Parameter, presionArterialMSI1Parameter, presionArterialMSI2Parameter, frecuenciaCardiacaParameter, frecuenciaRespiratoriaParameter, temperaturaParameter, saturacionOxigenoParameter, pesoParameter, tallaParameter, examenClinicoParameter, estadoParameter, usuarioCreacionParameter, fechacreacionParameter);
        }
    
        public virtual ObjectResult<SP_SS_IT_SaludInformePROCIngreso_Result> SP_SS_IT_SaludInformePROCIngreso(string unidadReplicacion, Nullable<int> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idOrdenAtencion, Nullable<int> lineaOrdenAtencion, string informe, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechacreacion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var lineaOrdenAtencionParameter = lineaOrdenAtencion.HasValue ?
                new ObjectParameter("LineaOrdenAtencion", lineaOrdenAtencion) :
                new ObjectParameter("LineaOrdenAtencion", typeof(int));
    
            var informeParameter = informe != null ?
                new ObjectParameter("Informe", informe) :
                new ObjectParameter("Informe", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechacreacionParameter = fechacreacion.HasValue ?
                new ObjectParameter("Fechacreacion", fechacreacion) :
                new ObjectParameter("Fechacreacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SS_IT_SaludInformePROCIngreso_Result>("SP_SS_IT_SaludInformePROCIngreso", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idOrdenAtencionParameter, lineaOrdenAtencionParameter, informeParameter, estadoParameter, usuarioCreacionParameter, fechacreacionParameter);
        }
    
        public virtual ObjectResult<SP_SS_IT_SaludInformeRutaIngreso_Result> SP_SS_IT_SaludInformeRutaIngreso(string unidadReplicacion, Nullable<int> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idOrdenAtencion, Nullable<int> lineaOrdenAtencion, string rutaInforme, string observacion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechacreacion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var lineaOrdenAtencionParameter = lineaOrdenAtencion.HasValue ?
                new ObjectParameter("LineaOrdenAtencion", lineaOrdenAtencion) :
                new ObjectParameter("LineaOrdenAtencion", typeof(int));
    
            var rutaInformeParameter = rutaInforme != null ?
                new ObjectParameter("RutaInforme", rutaInforme) :
                new ObjectParameter("RutaInforme", typeof(string));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechacreacionParameter = fechacreacion.HasValue ?
                new ObjectParameter("Fechacreacion", fechacreacion) :
                new ObjectParameter("Fechacreacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SS_IT_SaludInformeRutaIngreso_Result>("SP_SS_IT_SaludInformeRutaIngreso", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idOrdenAtencionParameter, lineaOrdenAtencionParameter, rutaInformeParameter, observacionParameter, estadoParameter, usuarioCreacionParameter, fechacreacionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_SS_IT_SALUDOFTALMOLOGICOIngreso(Nullable<int> idOrdenAtencion, Nullable<int> lineaOrdenAtencion, string unidadReplicacion, Nullable<int> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string secuencia, string eNFACTUAL, string aNTIMPORTANCIA, string aVscOD, string avCCOD, string aEAVODPIN, string cERCAVAD, string aVSCOI, string aVCCOI, string aEAVOIDPIN, string cERCAVAOI, string sPHodREFRA, string cILodREFA, string eJEodREFRA, string aVodREFRA, string aDDodREFRA, string dIPodREFRA, string sPHoiSCICLO, string cILoiSCICLO, string eJEoiSCICLO, string aVoiSCICLO, string aDDoiSCICLO, string dIPoiSCICLO, string pAPARPADOSANEXOS, string cORNEACRISTESCLERA, string iRISPUPILA, string tonoOD, string tonoOI, string mMHHTonShiotz, string mMHHTonAplanacion, string mMHHTonOtra, string fONDOJOyG, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion)
        {
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var lineaOrdenAtencionParameter = lineaOrdenAtencion.HasValue ?
                new ObjectParameter("LineaOrdenAtencion", lineaOrdenAtencion) :
                new ObjectParameter("LineaOrdenAtencion", typeof(int));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia != null ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(string));
    
            var eNFACTUALParameter = eNFACTUAL != null ?
                new ObjectParameter("ENFACTUAL", eNFACTUAL) :
                new ObjectParameter("ENFACTUAL", typeof(string));
    
            var aNTIMPORTANCIAParameter = aNTIMPORTANCIA != null ?
                new ObjectParameter("ANTIMPORTANCIA", aNTIMPORTANCIA) :
                new ObjectParameter("ANTIMPORTANCIA", typeof(string));
    
            var aVscODParameter = aVscOD != null ?
                new ObjectParameter("AVscOD", aVscOD) :
                new ObjectParameter("AVscOD", typeof(string));
    
            var avCCODParameter = avCCOD != null ?
                new ObjectParameter("AvCCOD", avCCOD) :
                new ObjectParameter("AvCCOD", typeof(string));
    
            var aEAVODPINParameter = aEAVODPIN != null ?
                new ObjectParameter("AEAVODPIN", aEAVODPIN) :
                new ObjectParameter("AEAVODPIN", typeof(string));
    
            var cERCAVADParameter = cERCAVAD != null ?
                new ObjectParameter("CERCAVAD", cERCAVAD) :
                new ObjectParameter("CERCAVAD", typeof(string));
    
            var aVSCOIParameter = aVSCOI != null ?
                new ObjectParameter("AVSCOI", aVSCOI) :
                new ObjectParameter("AVSCOI", typeof(string));
    
            var aVCCOIParameter = aVCCOI != null ?
                new ObjectParameter("AVCCOI", aVCCOI) :
                new ObjectParameter("AVCCOI", typeof(string));
    
            var aEAVOIDPINParameter = aEAVOIDPIN != null ?
                new ObjectParameter("AEAVOIDPIN", aEAVOIDPIN) :
                new ObjectParameter("AEAVOIDPIN", typeof(string));
    
            var cERCAVAOIParameter = cERCAVAOI != null ?
                new ObjectParameter("CERCAVAOI", cERCAVAOI) :
                new ObjectParameter("CERCAVAOI", typeof(string));
    
            var sPHodREFRAParameter = sPHodREFRA != null ?
                new ObjectParameter("SPHodREFRA", sPHodREFRA) :
                new ObjectParameter("SPHodREFRA", typeof(string));
    
            var cILodREFAParameter = cILodREFA != null ?
                new ObjectParameter("CILodREFA", cILodREFA) :
                new ObjectParameter("CILodREFA", typeof(string));
    
            var eJEodREFRAParameter = eJEodREFRA != null ?
                new ObjectParameter("EJEodREFRA", eJEodREFRA) :
                new ObjectParameter("EJEodREFRA", typeof(string));
    
            var aVodREFRAParameter = aVodREFRA != null ?
                new ObjectParameter("AVodREFRA", aVodREFRA) :
                new ObjectParameter("AVodREFRA", typeof(string));
    
            var aDDodREFRAParameter = aDDodREFRA != null ?
                new ObjectParameter("ADDodREFRA", aDDodREFRA) :
                new ObjectParameter("ADDodREFRA", typeof(string));
    
            var dIPodREFRAParameter = dIPodREFRA != null ?
                new ObjectParameter("DIPodREFRA", dIPodREFRA) :
                new ObjectParameter("DIPodREFRA", typeof(string));
    
            var sPHoiSCICLOParameter = sPHoiSCICLO != null ?
                new ObjectParameter("SPHoiSCICLO", sPHoiSCICLO) :
                new ObjectParameter("SPHoiSCICLO", typeof(string));
    
            var cILoiSCICLOParameter = cILoiSCICLO != null ?
                new ObjectParameter("CILoiSCICLO", cILoiSCICLO) :
                new ObjectParameter("CILoiSCICLO", typeof(string));
    
            var eJEoiSCICLOParameter = eJEoiSCICLO != null ?
                new ObjectParameter("EJEoiSCICLO", eJEoiSCICLO) :
                new ObjectParameter("EJEoiSCICLO", typeof(string));
    
            var aVoiSCICLOParameter = aVoiSCICLO != null ?
                new ObjectParameter("AVoiSCICLO", aVoiSCICLO) :
                new ObjectParameter("AVoiSCICLO", typeof(string));
    
            var aDDoiSCICLOParameter = aDDoiSCICLO != null ?
                new ObjectParameter("ADDoiSCICLO", aDDoiSCICLO) :
                new ObjectParameter("ADDoiSCICLO", typeof(string));
    
            var dIPoiSCICLOParameter = dIPoiSCICLO != null ?
                new ObjectParameter("DIPoiSCICLO", dIPoiSCICLO) :
                new ObjectParameter("DIPoiSCICLO", typeof(string));
    
            var pAPARPADOSANEXOSParameter = pAPARPADOSANEXOS != null ?
                new ObjectParameter("PAPARPADOSANEXOS", pAPARPADOSANEXOS) :
                new ObjectParameter("PAPARPADOSANEXOS", typeof(string));
    
            var cORNEACRISTESCLERAParameter = cORNEACRISTESCLERA != null ?
                new ObjectParameter("CORNEACRISTESCLERA", cORNEACRISTESCLERA) :
                new ObjectParameter("CORNEACRISTESCLERA", typeof(string));
    
            var iRISPUPILAParameter = iRISPUPILA != null ?
                new ObjectParameter("IRISPUPILA", iRISPUPILA) :
                new ObjectParameter("IRISPUPILA", typeof(string));
    
            var tonoODParameter = tonoOD != null ?
                new ObjectParameter("TonoOD", tonoOD) :
                new ObjectParameter("TonoOD", typeof(string));
    
            var tonoOIParameter = tonoOI != null ?
                new ObjectParameter("TonoOI", tonoOI) :
                new ObjectParameter("TonoOI", typeof(string));
    
            var mMHHTonShiotzParameter = mMHHTonShiotz != null ?
                new ObjectParameter("MMHHTonShiotz", mMHHTonShiotz) :
                new ObjectParameter("MMHHTonShiotz", typeof(string));
    
            var mMHHTonAplanacionParameter = mMHHTonAplanacion != null ?
                new ObjectParameter("MMHHTonAplanacion", mMHHTonAplanacion) :
                new ObjectParameter("MMHHTonAplanacion", typeof(string));
    
            var mMHHTonOtraParameter = mMHHTonOtra != null ?
                new ObjectParameter("MMHHTonOtra", mMHHTonOtra) :
                new ObjectParameter("MMHHTonOtra", typeof(string));
    
            var fONDOJOyGParameter = fONDOJOyG != null ?
                new ObjectParameter("FONDOJOyG", fONDOJOyG) :
                new ObjectParameter("FONDOJOyG", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SS_IT_SALUDOFTALMOLOGICOIngreso", idOrdenAtencionParameter, lineaOrdenAtencionParameter, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, eNFACTUALParameter, aNTIMPORTANCIAParameter, aVscODParameter, avCCODParameter, aEAVODPINParameter, cERCAVADParameter, aVSCOIParameter, aVCCOIParameter, aEAVOIDPINParameter, cERCAVAOIParameter, sPHodREFRAParameter, cILodREFAParameter, eJEodREFRAParameter, aVodREFRAParameter, aDDodREFRAParameter, dIPodREFRAParameter, sPHoiSCICLOParameter, cILoiSCICLOParameter, eJEoiSCICLOParameter, aVoiSCICLOParameter, aDDoiSCICLOParameter, dIPoiSCICLOParameter, pAPARPADOSANEXOSParameter, cORNEACRISTESCLERAParameter, iRISPUPILAParameter, tonoODParameter, tonoOIParameter, mMHHTonShiotzParameter, mMHHTonAplanacionParameter, mMHHTonOtraParameter, fONDOJOyGParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter);
        }
    
        public virtual ObjectResult<SP_SS_IT_SaludOFTALMOLOGICOIngresoIntermedia_Result> SP_SS_IT_SaludOFTALMOLOGICOIngresoIntermedia(Nullable<int> idOrdenAtencion, Nullable<int> lineaOrdenAtencion, string unidadReplicacion, Nullable<int> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string secuencia, string eNFACTUAL, string aNTIMPORTANCIA, string aVscOD, string avCCOD, string aEAVODPIN, string cERCAVAD, string aVSCOI, string aVCCOI, string aEAVOIDPIN, string cERCAVAOI, string sPHodREFRA, string cILodREFA, string eJEodREFRA, string aVodREFRA, string aDDodREFRA, string dIPodREFRA, string sPHoiSCICLO, string cILoiSCICLO, string eJEoiSCICLO, string aVoiSCICLO, string aDDoiSCICLO, string dIPoiSCICLO, string pAPARPADOSANEXOS, string cORNEACRISTESCLERA, string iRISPUPILA, string tonoOD, string tonoOI, string mMHHTonShiotz, string mMHHTonAplanacion, string mMHHTonOtra, string fONDOJOyG, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechacreacion)
        {
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var lineaOrdenAtencionParameter = lineaOrdenAtencion.HasValue ?
                new ObjectParameter("LineaOrdenAtencion", lineaOrdenAtencion) :
                new ObjectParameter("LineaOrdenAtencion", typeof(int));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia != null ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(string));
    
            var eNFACTUALParameter = eNFACTUAL != null ?
                new ObjectParameter("ENFACTUAL", eNFACTUAL) :
                new ObjectParameter("ENFACTUAL", typeof(string));
    
            var aNTIMPORTANCIAParameter = aNTIMPORTANCIA != null ?
                new ObjectParameter("ANTIMPORTANCIA", aNTIMPORTANCIA) :
                new ObjectParameter("ANTIMPORTANCIA", typeof(string));
    
            var aVscODParameter = aVscOD != null ?
                new ObjectParameter("AVscOD", aVscOD) :
                new ObjectParameter("AVscOD", typeof(string));
    
            var avCCODParameter = avCCOD != null ?
                new ObjectParameter("AvCCOD", avCCOD) :
                new ObjectParameter("AvCCOD", typeof(string));
    
            var aEAVODPINParameter = aEAVODPIN != null ?
                new ObjectParameter("AEAVODPIN", aEAVODPIN) :
                new ObjectParameter("AEAVODPIN", typeof(string));
    
            var cERCAVADParameter = cERCAVAD != null ?
                new ObjectParameter("CERCAVAD", cERCAVAD) :
                new ObjectParameter("CERCAVAD", typeof(string));
    
            var aVSCOIParameter = aVSCOI != null ?
                new ObjectParameter("AVSCOI", aVSCOI) :
                new ObjectParameter("AVSCOI", typeof(string));
    
            var aVCCOIParameter = aVCCOI != null ?
                new ObjectParameter("AVCCOI", aVCCOI) :
                new ObjectParameter("AVCCOI", typeof(string));
    
            var aEAVOIDPINParameter = aEAVOIDPIN != null ?
                new ObjectParameter("AEAVOIDPIN", aEAVOIDPIN) :
                new ObjectParameter("AEAVOIDPIN", typeof(string));
    
            var cERCAVAOIParameter = cERCAVAOI != null ?
                new ObjectParameter("CERCAVAOI", cERCAVAOI) :
                new ObjectParameter("CERCAVAOI", typeof(string));
    
            var sPHodREFRAParameter = sPHodREFRA != null ?
                new ObjectParameter("SPHodREFRA", sPHodREFRA) :
                new ObjectParameter("SPHodREFRA", typeof(string));
    
            var cILodREFAParameter = cILodREFA != null ?
                new ObjectParameter("CILodREFA", cILodREFA) :
                new ObjectParameter("CILodREFA", typeof(string));
    
            var eJEodREFRAParameter = eJEodREFRA != null ?
                new ObjectParameter("EJEodREFRA", eJEodREFRA) :
                new ObjectParameter("EJEodREFRA", typeof(string));
    
            var aVodREFRAParameter = aVodREFRA != null ?
                new ObjectParameter("AVodREFRA", aVodREFRA) :
                new ObjectParameter("AVodREFRA", typeof(string));
    
            var aDDodREFRAParameter = aDDodREFRA != null ?
                new ObjectParameter("ADDodREFRA", aDDodREFRA) :
                new ObjectParameter("ADDodREFRA", typeof(string));
    
            var dIPodREFRAParameter = dIPodREFRA != null ?
                new ObjectParameter("DIPodREFRA", dIPodREFRA) :
                new ObjectParameter("DIPodREFRA", typeof(string));
    
            var sPHoiSCICLOParameter = sPHoiSCICLO != null ?
                new ObjectParameter("SPHoiSCICLO", sPHoiSCICLO) :
                new ObjectParameter("SPHoiSCICLO", typeof(string));
    
            var cILoiSCICLOParameter = cILoiSCICLO != null ?
                new ObjectParameter("CILoiSCICLO", cILoiSCICLO) :
                new ObjectParameter("CILoiSCICLO", typeof(string));
    
            var eJEoiSCICLOParameter = eJEoiSCICLO != null ?
                new ObjectParameter("EJEoiSCICLO", eJEoiSCICLO) :
                new ObjectParameter("EJEoiSCICLO", typeof(string));
    
            var aVoiSCICLOParameter = aVoiSCICLO != null ?
                new ObjectParameter("AVoiSCICLO", aVoiSCICLO) :
                new ObjectParameter("AVoiSCICLO", typeof(string));
    
            var aDDoiSCICLOParameter = aDDoiSCICLO != null ?
                new ObjectParameter("ADDoiSCICLO", aDDoiSCICLO) :
                new ObjectParameter("ADDoiSCICLO", typeof(string));
    
            var dIPoiSCICLOParameter = dIPoiSCICLO != null ?
                new ObjectParameter("DIPoiSCICLO", dIPoiSCICLO) :
                new ObjectParameter("DIPoiSCICLO", typeof(string));
    
            var pAPARPADOSANEXOSParameter = pAPARPADOSANEXOS != null ?
                new ObjectParameter("PAPARPADOSANEXOS", pAPARPADOSANEXOS) :
                new ObjectParameter("PAPARPADOSANEXOS", typeof(string));
    
            var cORNEACRISTESCLERAParameter = cORNEACRISTESCLERA != null ?
                new ObjectParameter("CORNEACRISTESCLERA", cORNEACRISTESCLERA) :
                new ObjectParameter("CORNEACRISTESCLERA", typeof(string));
    
            var iRISPUPILAParameter = iRISPUPILA != null ?
                new ObjectParameter("IRISPUPILA", iRISPUPILA) :
                new ObjectParameter("IRISPUPILA", typeof(string));
    
            var tonoODParameter = tonoOD != null ?
                new ObjectParameter("TonoOD", tonoOD) :
                new ObjectParameter("TonoOD", typeof(string));
    
            var tonoOIParameter = tonoOI != null ?
                new ObjectParameter("TonoOI", tonoOI) :
                new ObjectParameter("TonoOI", typeof(string));
    
            var mMHHTonShiotzParameter = mMHHTonShiotz != null ?
                new ObjectParameter("MMHHTonShiotz", mMHHTonShiotz) :
                new ObjectParameter("MMHHTonShiotz", typeof(string));
    
            var mMHHTonAplanacionParameter = mMHHTonAplanacion != null ?
                new ObjectParameter("MMHHTonAplanacion", mMHHTonAplanacion) :
                new ObjectParameter("MMHHTonAplanacion", typeof(string));
    
            var mMHHTonOtraParameter = mMHHTonOtra != null ?
                new ObjectParameter("MMHHTonOtra", mMHHTonOtra) :
                new ObjectParameter("MMHHTonOtra", typeof(string));
    
            var fONDOJOyGParameter = fONDOJOyG != null ?
                new ObjectParameter("FONDOJOyG", fONDOJOyG) :
                new ObjectParameter("FONDOJOyG", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechacreacionParameter = fechacreacion.HasValue ?
                new ObjectParameter("Fechacreacion", fechacreacion) :
                new ObjectParameter("Fechacreacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SS_IT_SaludOFTALMOLOGICOIngresoIntermedia_Result>("SP_SS_IT_SaludOFTALMOLOGICOIngresoIntermedia", idOrdenAtencionParameter, lineaOrdenAtencionParameter, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, eNFACTUALParameter, aNTIMPORTANCIAParameter, aVscODParameter, avCCODParameter, aEAVODPINParameter, cERCAVADParameter, aVSCOIParameter, aVCCOIParameter, aEAVOIDPINParameter, cERCAVAOIParameter, sPHodREFRAParameter, cILodREFAParameter, eJEodREFRAParameter, aVodREFRAParameter, aDDodREFRAParameter, dIPodREFRAParameter, sPHoiSCICLOParameter, cILoiSCICLOParameter, eJEoiSCICLOParameter, aVoiSCICLOParameter, aDDoiSCICLOParameter, dIPoiSCICLOParameter, pAPARPADOSANEXOSParameter, cORNEACRISTESCLERAParameter, iRISPUPILAParameter, tonoODParameter, tonoOIParameter, mMHHTonShiotzParameter, mMHHTonAplanacionParameter, mMHHTonOtraParameter, fONDOJOyGParameter, estadoParameter, usuarioCreacionParameter, fechacreacionParameter);
        }
    
        public virtual ObjectResult<SP_SS_IT_SaludProcedimientoIngreso_Result> SP_SS_IT_SaludProcedimientoIngreso(string unidadReplicacion, Nullable<int> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idOrdenAtencion, Nullable<int> linea, string componente, Nullable<int> secuencia, Nullable<int> tipoOrdenatencion, Nullable<decimal> cantidad, Nullable<int> indicadorEPS, Nullable<int> idMedico, Nullable<int> especialidad, Nullable<int> idCita, string observacion, string sECUENCIALHCE, Nullable<int> estadoDocumento, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechacreacion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var lineaParameter = linea.HasValue ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(int));
    
            var componenteParameter = componente != null ?
                new ObjectParameter("Componente", componente) :
                new ObjectParameter("Componente", typeof(string));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var tipoOrdenatencionParameter = tipoOrdenatencion.HasValue ?
                new ObjectParameter("TipoOrdenatencion", tipoOrdenatencion) :
                new ObjectParameter("TipoOrdenatencion", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));
    
            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));
    
            var idMedicoParameter = idMedico.HasValue ?
                new ObjectParameter("IdMedico", idMedico) :
                new ObjectParameter("IdMedico", typeof(int));
    
            var especialidadParameter = especialidad.HasValue ?
                new ObjectParameter("Especialidad", especialidad) :
                new ObjectParameter("Especialidad", typeof(int));
    
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("IdCita", idCita) :
                new ObjectParameter("IdCita", typeof(int));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var sECUENCIALHCEParameter = sECUENCIALHCE != null ?
                new ObjectParameter("SECUENCIALHCE", sECUENCIALHCE) :
                new ObjectParameter("SECUENCIALHCE", typeof(string));
    
            var estadoDocumentoParameter = estadoDocumento.HasValue ?
                new ObjectParameter("EstadoDocumento", estadoDocumento) :
                new ObjectParameter("EstadoDocumento", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechacreacionParameter = fechacreacion.HasValue ?
                new ObjectParameter("Fechacreacion", fechacreacion) :
                new ObjectParameter("Fechacreacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SS_IT_SaludProcedimientoIngreso_Result>("SP_SS_IT_SaludProcedimientoIngreso", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idOrdenAtencionParameter, lineaParameter, componenteParameter, secuenciaParameter, tipoOrdenatencionParameter, cantidadParameter, indicadorEPSParameter, idMedicoParameter, especialidadParameter, idCitaParameter, observacionParameter, sECUENCIALHCEParameter, estadoDocumentoParameter, estadoParameter, usuarioCreacionParameter, fechacreacionParameter);
        }
    
        public virtual ObjectResult<SP_SS_IT_SaludRecetaIndicacionesGENIngreso_Result> SP_SS_IT_SaludRecetaIndicacionesGENIngreso(string unidadReplicacion, Nullable<int> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idOrdenAtencion, Nullable<int> lINEA, Nullable<int> tipoIndicacion, string descripcion, Nullable<int> secuencia, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechacreacion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var lINEAParameter = lINEA.HasValue ?
                new ObjectParameter("LINEA", lINEA) :
                new ObjectParameter("LINEA", typeof(int));
    
            var tipoIndicacionParameter = tipoIndicacion.HasValue ?
                new ObjectParameter("TipoIndicacion", tipoIndicacion) :
                new ObjectParameter("TipoIndicacion", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechacreacionParameter = fechacreacion.HasValue ?
                new ObjectParameter("Fechacreacion", fechacreacion) :
                new ObjectParameter("Fechacreacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SS_IT_SaludRecetaIndicacionesGENIngreso_Result>("SP_SS_IT_SaludRecetaIndicacionesGENIngreso", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idOrdenAtencionParameter, lINEAParameter, tipoIndicacionParameter, descripcionParameter, secuenciaParameter, estadoParameter, usuarioCreacionParameter, fechacreacionParameter);
        }
    
        public virtual ObjectResult<SP_SS_IT_SALUDAnamnesisInFormeMedico_Result> SP_SS_IT_SALUDAnamnesisInFormeMedico(Nullable<int> iDordenatencion, Nullable<int> idPaciente, Nullable<int> idLineaOa, Nullable<int> secuencia, string informeMedico, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string examenClinico, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion)
        {
            var iDordenatencionParameter = iDordenatencion.HasValue ?
                new ObjectParameter("IDordenatencion", iDordenatencion) :
                new ObjectParameter("IDordenatencion", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var idLineaOaParameter = idLineaOa.HasValue ?
                new ObjectParameter("IdLineaOa", idLineaOa) :
                new ObjectParameter("IdLineaOa", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var informeMedicoParameter = informeMedico != null ?
                new ObjectParameter("InformeMedico", informeMedico) :
                new ObjectParameter("InformeMedico", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var examenClinicoParameter = examenClinico != null ?
                new ObjectParameter("ExamenClinico", examenClinico) :
                new ObjectParameter("ExamenClinico", typeof(string));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SS_IT_SALUDAnamnesisInFormeMedico_Result>("SP_SS_IT_SALUDAnamnesisInFormeMedico", iDordenatencionParameter, idPacienteParameter, idLineaOaParameter, secuenciaParameter, informeMedicoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, examenClinicoParameter, usuarioModificacionParameter, fechaModificacionParameter);
        }
    
        public virtual ObjectResult<SP_SS_IT_SALUDDescansoMedico_Result> SP_SS_IT_SALUDDescansoMedico(Nullable<int> idOrdenAtencion, Nullable<int> idPaciente, Nullable<int> idLineaOa, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFinal, string observaciones, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion)
        {
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var idLineaOaParameter = idLineaOa.HasValue ?
                new ObjectParameter("IdLineaOa", idLineaOa) :
                new ObjectParameter("IdLineaOa", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("FechaFinal", fechaFinal) :
                new ObjectParameter("FechaFinal", typeof(System.DateTime));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SS_IT_SALUDDescansoMedico_Result>("SP_SS_IT_SALUDDescansoMedico", idOrdenAtencionParameter, idPacienteParameter, idLineaOaParameter, fechaInicioParameter, fechaFinalParameter, observacionesParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter);
        }
    
        public virtual ObjectResult<SP_SS_HC_ProcedimientoInformeSPRING_LISTAR_Result> SP_SS_HC_ProcedimientoInformeSPRING_LISTAR(Nullable<int> idPaciente, string paciente, string codigoOA, string codigoComponente, string descripcionComponente, Nullable<int> inicio, Nullable<int> numeroFilas, string accion)
        {
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var pacienteParameter = paciente != null ?
                new ObjectParameter("Paciente", paciente) :
                new ObjectParameter("Paciente", typeof(string));
    
            var codigoOAParameter = codigoOA != null ?
                new ObjectParameter("CodigoOA", codigoOA) :
                new ObjectParameter("CodigoOA", typeof(string));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var descripcionComponenteParameter = descripcionComponente != null ?
                new ObjectParameter("DescripcionComponente", descripcionComponente) :
                new ObjectParameter("DescripcionComponente", typeof(string));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("Inicio", inicio) :
                new ObjectParameter("Inicio", typeof(int));
    
            var numeroFilasParameter = numeroFilas.HasValue ?
                new ObjectParameter("NumeroFilas", numeroFilas) :
                new ObjectParameter("NumeroFilas", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SS_HC_ProcedimientoInformeSPRING_LISTAR_Result>("SP_SS_HC_ProcedimientoInformeSPRING_LISTAR", idPacienteParameter, pacienteParameter, codigoOAParameter, codigoComponenteParameter, descripcionComponenteParameter, inicioParameter, numeroFilasParameter, accionParameter);
        }
    }
}
